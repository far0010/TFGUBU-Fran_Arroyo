name: Build and Analyze

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  sonarqube:
    name: SonarQube Analysis
    runs-on: windows-latest

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Java
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Restaurar caché de SonarScanner
        id: sonar-cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.temp }}/sonar-scanner
          key: sonar-scanner-cli-5.0.1.3006-windows

      - name: Descargar SonarScanner si no hay caché
        if: steps.sonar-cache.outputs.cache-hit != 'true'
        run: |
          curl -L -o sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-windows.zip
          unzip sonar-scanner.zip -d "${RUNNER_TEMP}/sonar-scanner"
        shell: bash

      - name: Añadir SonarScanner al PATH
        run: echo "${RUNNER_TEMP}/sonar-scanner/sonar-scanner-5.0.1.3006-windows/bin" >> $GITHUB_PATH
        shell: bash

      - name: Ejecutar análisis con SonarScanner
        shell: cmd
        run: |
          sonar-scanner.bat ^
            -Dsonar.organization=far0010tfg ^
            -Dsonar.projectKey=far0010_TFGUBU-Fran_Arroyo ^
            -Dsonar.host.url=https://sonarcloud.io ^
            -Dsonar.token=${{ secrets.SONAR_TOKEN }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
